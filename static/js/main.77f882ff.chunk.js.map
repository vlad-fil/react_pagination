{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","currentPage","lastPage","onChange","className","href","onClick","map","page","items","App","total","length","useState","setCurrentPage","perPage","setPerPage","Math","ceil","Number","start","end","id","defaultValue","event","target","value","htmlFor","slice","item","ReactDOM","render","document","getElementById"],"mappings":"mKAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCEIG,EAA8B,SAAC,GAIrC,IAHLC,EAGI,EAHJA,YACAC,EAEI,EAFJA,SACAC,EACI,EADJA,SAEA,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAS,oBAA+B,IAAhBH,GAAqB,YAAjD,SACE,mBACE,UAAQ,WACRG,UAAU,YACVC,KAAK,QACL,gBAA+B,IAAhBJ,EACfK,QAAS,WACa,IAAhBL,GACFE,EAASF,EAAc,IAP7B,oBAcDP,EAAW,EAAGQ,GAAUK,KAAI,SAAAC,GAAI,OAC/B,oBACEJ,UAAS,oBAAeH,IAAgBO,GAAQ,UADlD,SAIE,mBACE,UAAQ,WACRJ,UAAU,YACVC,KAAI,WAAMG,GACVF,QAAS,WACHL,IAAgBO,GAClBL,EAASK,IANf,SAUGA,KAZEA,MAgBT,oBAAIJ,UAAS,oBAAeH,IAAgBC,GAAY,YAAxD,SACE,mBACE,UAAQ,WACRE,UAAU,YACVC,KAAK,QACL,gBAAeJ,IAAgBC,EAC/BI,QAAS,WACHL,IAAgBC,GAClBC,EAASF,EAAc,IAP7B,wBC7CFQ,EAAQf,EAAW,EAAG,IACzBa,KAAI,SAAAT,GAAC,qBAAYA,MAEPY,EAAgB,WAC3B,IAAMC,EAAQF,EAAMG,OAEpB,EAAsCC,mBAAS,GAA/C,mBAAOZ,EAAP,KAAoBa,EAApB,KACA,EAA8BD,mBAAS,GAAvC,mBAAOE,EAAP,KAAgBC,EAAhB,KAMMd,EAAWe,KAAKC,KAAKP,EAAQQ,OAAOJ,IACpCK,GAASnB,EAAc,GAAKkB,OAAOJ,GACnCM,EAAOD,EAAQD,OAAOJ,GAAYJ,EACpCS,EAAQD,OAAOJ,GACfJ,EAEJ,OACE,sBAAKP,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWH,EADX,mBACiCmB,EAAQ,EADzC,cACgDC,EADhD,eAC0DV,EAD1D,OAIA,sBAAKP,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRkB,GAAG,kBACHlB,UAAU,eACVmB,aAAc,EACdpB,SAAU,SAACqB,GACTR,GAAYQ,EAAMC,OAAOC,OACzBZ,EAAe,IAPnB,UAUE,wBAAQY,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOC,QAAQ,kBAAkBvB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEH,YAAaA,EACbC,SAAUA,EACVC,SA7Ce,SAACK,GACpBM,EAAeN,MA+Cb,6BACGC,EAAMmB,MAAMR,EAAOC,GAAKd,KAAI,SAAAsB,GAAI,OAC/B,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YC9DnBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.77f882ff.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  currentPage: number,\n  lastPage: number,\n  onChange: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  currentPage,\n  lastPage,\n  onChange,\n}) => {\n  return (\n    <ul className=\"pagination\">\n      <li className={`page-item ${currentPage === 1 && 'disabled'}`}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={() => {\n            if (currentPage !== 1) {\n              onChange(currentPage - 1);\n            }\n          }}\n        >\n          «\n        </a>\n      </li>\n      {getNumbers(1, lastPage).map(page => (\n        <li\n          className={`page-item ${currentPage === page && 'active'}`}\n          key={page}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => {\n              if (currentPage !== page) {\n                onChange(page);\n              }\n            }}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n      <li className={`page-item ${currentPage === lastPage && 'disabled'}`}>\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === lastPage}\n          onClick={() => {\n            if (currentPage !== lastPage) {\n              onChange(currentPage + 1);\n            }\n          }}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const total = items.length;\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n\n  const onPageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const lastPage = Math.ceil(total / Number(perPage));\n  const start = (currentPage - 1) * Number(perPage);\n  const end = (start + Number(perPage)) < total\n    ? start + Number(perPage)\n    : total;\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${start + 1} - ${end} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            defaultValue={5}\n            onChange={(event) => {\n              setPerPage(+event.target.value);\n              setCurrentPage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        currentPage={currentPage}\n        lastPage={lastPage}\n        onChange={onPageChange}\n      />\n\n      <ul>\n        {items.slice(start, end).map(item => (\n          <li key={item} data-cy=\"item\">{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}